/// <reference types="node" />
import { IncomingMessage as I, ServerResponse as S } from 'http';
export declare type Res = Pick<S, 'setHeader' | 'statusCode' | 'getHeader' | 'end'>;
declare type next = (err?: any) => void;
export declare const redirect: <Request_1 extends Pick<I, "headers" | "method"> = Pick<I, "headers" | "method">, Response_1 extends Pick<S, "statusCode" | "setHeader" | "getHeader" | "end"> = Pick<S, "statusCode" | "setHeader" | "getHeader" | "end">, Next extends next = next>(req: Request_1, res: Response_1, next: Next) => (url: string, status?: number) => Response_1;
export {};
