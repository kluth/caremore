/// <reference types="node" />
import { IncomingMessage, ServerResponse as Response } from 'http';
import { Algorithm } from 'jsonwebtoken';
export interface JwtMwProps {
    secret: string | string[];
    algorithm?: Algorithm;
    audience?: string;
    issuer?: string;
    expiresIn?: string;
    notBefore?: string;
    requestHeaderName?: string;
    responseHeaderName?: string;
    getToken?: (header: string) => string;
}
export interface Request extends IncomingMessage {
    user?: any;
}
/**
 * JWT middleware
 */
export declare const jwt: ({ secret, algorithm, audience, issuer, expiresIn, notBefore, requestHeaderName, responseHeaderName, getToken }: JwtMwProps) => (req: Request, res: Response, next?: () => void) => void;
